<?php

namespace AppBundle\Repository;

/**
 * booksRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class booksRepository extends \Doctrine\ORM\EntityRepository {
    
    /**
     * Returns the 10 most recently added books.
     */
    public function findLastBooks() {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            "SELECT b.id, b.name, b.author, b.price, b.description, b.forChange 
            FROM AppBundle:books b 
            ORDER BY b.addedAt DESC"
        )->setMaxResults(10);
        return $query->getResult();
    }
    
    /**
     * Returns books that match to the search criteria.
     */
    public function findBooks($category, $searchField) {
        $em = $this->getEntityManager();
        
        $parameters = array();
        $where = '';
        if ((int)$category != 0) {
            $where .= "WHERE b.categories = :category";
            $parameters['category'] = $category;
        } else if ($searchField != '0') {
            $where .= "WHERE b.name LIKE '%$searchField%' OR b.author LIKE '%$searchField%' OR b.keyWords LIKE '%$searchField%'";
        }
        
        $query = $em->createQuery(
            "SELECT b.id, b.name, b.author, b.price, b.description, b.forChange 
            FROM AppBundle:books b 
            $where 
            ORDER BY b.addedAt DESC"
        )->setParameters($parameters);
        return $query->getResult();
    }
    
    /**
     * Returns book with specyfic book id.
     */
    public function findById($bookId) {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            "SELECT b.id, b.name, b.author, b.price, b.description, b.forChange, 
                u.email, u.phone 
            FROM AppBundle:books b 
            JOIN b.users u 
            WHERE b.id = :bookId"
        )->setParameter("bookId", $bookId);
        return $query->getResult();
    }
    
}
